import 'dart:convert';

import 'package:doppio_dev_ixn/generated/l10n.dart';
import 'package:file_selector/file_selector.dart';
import 'package:flutter/widgets.dart';
// import 'package:file_access/file_access.dart' as file_access;
import 'package:file_selector/file_selector.dart' as file_access;

import 'package:path/path.dart' as path;

class TranslateService {
  static final _translateServiceSingleton = TranslateService._internal();

  S locale;

  factory TranslateService() {
    return _translateServiceSingleton;
  }
  TranslateService._internal();

  void update(BuildContext context) {
    locale = S.of(context);
  }

  /// {@template flutter.localizations.material.languages}
  // static Map<String, String> localeCountryName = {
  //   'af': 'Afrikaans',
  //   'am': 'Amharic',
  //   'ar': 'Arabic',
  //   'as': 'Assamese',
  //   'az': 'Azerbaijani',
  //   'be': 'Belarusian',
  //   'bg': 'Bulgarian',
  //   'bn': 'Bengali Bangla',
  //   'bs': 'Bosnian',
  //   'ca': 'Catalan Valencian',
  //   'cs': 'Czech',
  //   'da': 'Danish',
  //   'de': 'German (plus one country variation)',
  //   'el': 'Modern Greek',
  //   'en': 'English (plus 8 country variations)',
  //   'es': 'Spanish Castilian (plus 20 country variations)',
  //   'et': 'Estonian',
  //   'eu': 'Basque',
  //   'fa': 'Persian',
  //   'fi': 'Finnish',
  //   'fil': 'Filipino Pilipino',
  //   'fr': 'French (plus one country variation)',
  //   'gl': 'Galician',
  //   'gsw': 'Swiss German Alemannic Alsatian',
  //   'gu': 'Gujarati',
  //   'he': 'Hebrew',
  //   'hi': 'Hindi',
  //   'hr': 'Croatian',
  //   'hu': 'Hungarian',
  //   'hy': 'Armenian',
  //   'id': 'Indonesian',
  //   'is': 'Icelandic',
  //   'it': 'Italian',
  //   'ja': 'Japanese',
  //   'ka': 'Georgian',
  //   'kk': 'Kazakh',
  //   'km': 'Khmer Central Khmer',
  //   'kn': 'Kannada',
  //   'ko': 'Korean',
  //   'ky': 'Kirghiz Kyrgyz',
  //   'lo': 'Lao',
  //   'lt': 'Lithuanian',
  //   'lv': 'Latvian',
  //   'mk': 'Macedonian',
  //   'ml': 'Malayalam',
  //   'mn': 'Mongolian',
  //   'mr': 'Marathi',
  //   'ms': 'Malay',
  //   'my': 'Burmese',
  //   'nb': 'Norwegian Bokm√•l, which, in this library, is a synonym of `no`',
  //   'ne': 'Nepali',
  //   'nl': 'Dutch Flemish',
  //   'no': 'Norwegian',
  //   'or': 'Oriya',
  //   'pa': 'Panjabi Punjabi',
  //   'pl': 'Polish',
  //   'ps': 'Pushto Pashto',
  //   'pt': 'Portuguese (plus one country variation)',
  //   'ro': 'Romanian Moldavian Moldovan',
  //   'ru': 'Russian',
  //   'si': 'Sinhala Sinhalese',
  //   'sk': 'Slovak',
  //   'sl': 'Slovenian',
  //   'sq': 'Albanian',
  //   'sr': 'Serbian (plus 2 scripts)',
  //   'sv': 'Swedish',
  //   'sw': 'Swahili',
  //   'ta': 'Tamil',
  //   'te': 'Telugu',
  //   'th': 'Thai',
  //   'tl': 'Tagalog',
  //   'tr': 'Turkish',
  //   'uk': 'Ukrainian',
  //   'ur': 'Urdu',
  //   'uz': 'Uzbek',
  //   'vi': 'Vietnamese',
  //   'zh': 'Chinese (plus 2 country variations and 2 scripts)',
  //   'zu': 'Zulu',
  // };

  static Map<String, String> countryName2Code = {
    'Afghanistan - Dari': 'prs-AF',
    'Afghanistan - Pashto': 'ps-AF',
    'Albania - Albanian': 'sq-AL',
    'Algeria - Arabic': 'ar-DZ',
    'Algeria - Tamazight (Latin)': 'tzm-DZ',
    'Argentina - Spanish': 'es-AR',
    'Armenia - Armenian': 'hy-AM',
    'Australia - English': 'en-AU',
    'Austria - German': 'de-AT',
    'Azerbaijan - Azeri (Cyrillic)': 'az-AZ',
    'Azerbaijan - Azeri (Latin)': 'az-AZ',
    'Bahrain - Arabic': 'ar-BH',
    'Bangladesh - Bengali': 'bn-BD',
    'Belarus - Belarusian': 'be-BY',
    'Belgium - Dutch': 'nl-BE',
    'Belgium - French': 'fr-BE',
    'Belize - English': 'en-BZ',
    'Bolivarian Republic of Venezuela - Spanish': 'es-VE',
    'Bolivia - Quechua': 'quz-BO',
    'Bolivia - Spanish': 'es-BO',
    'Bosnia and Herzegovina - Bosnian (Cyrillic)': 'bs-BA',
    'Bosnia and Herzegovina - Bosnian (Latin)': 'bs-BA',
    'Bosnia and Herzegovina - Croatian': 'hr-BA',
    'Bosnia and Herzegovina - Serbian (Cyrillic)': 'sr-BA',
    'Bosnia and Herzegovina - Serbian (Latin)': 'sr-BA',
    'Brazil - Portuguese': 'pt-BR',
    'Brunei Darussalam - Malay': 'ms-BN',
    'Bulgaria - Bulgarian': 'bg-BG',
    'Cambodia - Khmer': 'km-KH',
    'Canada - English': 'en-CA',
    'Canada - French': 'fr-CA',
    'Canada - Inuktitut (Latin)': 'iu-CA',
    'Canada - Inuktitut (Syllabics)': 'iu-CA',
    'Canada - Mohawk': 'moh-CA',
    'Caribbean - English': 'en-029',
    'Chile - Mapudungun': 'arn-CL',
    'Chile - Spanish': 'es-CL',
    'Colombia - Spanish': 'es-CO',
    'Costa Rica - Spanish': 'es-CR',
    'Croatia - Croatian': 'hr-HR',
    'Czech Republic - Czech': 'cs-CZ',
    'Denmark - Danish': 'da-DK',
    'Dominican Republic - Spanish': 'es-DO',
    'Ecuador - Quechua': 'quz-EC',
    'Ecuador - Spanish': 'es-EC',
    'Egypt - Arabic': 'ar-EG',
    'El Salvador - Spanish': 'es-SV',
    'Estonia - Estonian': 'et-EE',
    'Ethiopia - Amharic': 'am-ET',
    'Faroe Islands - Faroese': 'fo-FO',
    'Finland - Finnish': 'fi-FI',
    'Finland - Sami (Inari)': 'smn-FI',
    'Finland - Sami (Northern)': 'se-FI',
    'Finland - Sami (Skolt)': 'sms-FI',
    'Finland - Swedish': 'sv-FI',
    'France - Alsatian': 'gsw-FR',
    'France - Breton': 'br-FR',
    'France - Corsican': 'co-FR',
    'France - French': 'fr-FR',
    'France - Occitan': 'oc-FR',
    'Georgia - Georgian': 'ka-GE',
    'Germany - German': 'de-DE',
    'Germany - Lower Sorbian': 'dsb-DE',
    'Germany - Upper Sorbian': 'hsb-DE',
    'Greece - Greek': 'el-GR',
    'Greenland - Greenlandic': 'kl-GL',
    'Guatemala - K\'iche': 'qut-GT',
    'Guatemala - Spanish': 'es-GT',
    'Honduras - Spanish': 'es-HN',
    'Hong Kong S.A.R. - Chinese (Traditional) Legacy': 'zh-HK',
    'Hungary - Hungarian': 'hu-HU',
    'Iceland - Icelandic': 'is-IS',
    'India - Assamese': 'as-IN',
    'India - Bengali': 'bn-IN',
    'India - English': 'en-IN',
    'India - Gujarati': 'gu-IN',
    'India - Hindi': 'hi-IN',
    'India - Kannada': 'kn-IN',
    'India - Konkani': 'kok-IN',
    'India - Malayalam': 'ml-IN',
    'India - Marathi': 'mr-IN',
    'India - Oriya': 'or-IN',
    'India - Punjabi': 'pa-IN',
    'India - Sanskrit': 'sa-IN',
    'India - Tamil': 'ta-IN',
    'India - Telugu': 'te-IN',
    'Indonesia - Indonesian': 'id-ID',
    'Iran - Persian': 'fa-IR',
    'Iraq - Arabic': 'ar-IQ',
    'Ireland - English': 'en-IE',
    'Ireland - Irish': 'ga-IE',
    'Islamic Republic of Pakistan - Urdu': 'ur-PK',
    'Israel - Hebrew': 'he-IL',
    'Italy - Italian': 'it-IT',
    'Jamaica - English': 'en-JM',
    'Japan - Japanese': 'ja-JP',
    'Jordan - Arabic': 'ar-JO',
    'Kazakhstan - Kazakh': 'kk-KZ',
    'Kenya - Kiswahili': 'sw-KE',
    'Korea - Korean': 'ko-KR',
    'Kuwait - Arabic': 'ar-KW',
    'Kyrgyzstan - Kyrgyz': 'ky-KG',
    'Lao P.D.R. - Lao': 'lo-LA',
    'Latvia - Latvian': 'lv-LV',
    'Lebanon - Arabic': 'ar-LB',
    'Libya - Arabic': 'ar-LY',
    'Liechtenstein - German': 'de-LI',
    'Lithuania - Lithuanian': 'lt-LT',
    'Luxembourg - French': 'fr-LU',
    'Luxembourg - German': 'de-LU',
    'Luxembourg - Luxembourgish': 'lb-LU',
    'Macao S.A.R. - Chinese (Traditional) Legacy': 'zh-MO',
    'Macedonia (FYROM) - Macedonian (FYROM)': 'mk-MK',
    'Malaysia - English': 'en-MY',
    'Malaysia - Malay': 'ms-MY',
    'Maldives - Divehi': 'dv-MV',
    'Malta - Maltese': 'mt-MT',
    'Mexico - Spanish': 'es-MX',
    'Mongolia - Mongolian (Cyrillic)': 'mn-MN',
    'Montenegro - Serbian (Cyrillic)': 'sr-ME',
    'Montenegro - Serbian (Latin)': 'sr-ME',
    'Morocco - Arabic': 'ar-MA',
    'Nepal - Nepali': 'ne-NP',
    'Netherlands - Dutch': 'nl-NL',
    'Netherlands - Frisian': 'fy-NL',
    'New Zealand - English': 'en-NZ',
    'New Zealand - Maori': 'mi-NZ',
    'Nicaragua - Spanish': 'es-NI',
    'Nigeria - Hausa (Latin)': 'ha-NG',
    'Nigeria - Igbo': 'ig-NG',
    'Nigeria - Yoruba': 'yo-NG',
    'Norway - Norwegian (Bokmal)': 'nb-NO',
    'Norway - Norwegian (Nynorsk)': 'nn-NO',
    'Norway - Sami (Lule)': 'smj-NO',
    'Norway - Sami (Northern)': 'se-NO',
    'Norway - Sami (Southern)': 'sma-NO',
    'Oman - Arabic': 'ar-OM',
    'Panama - Spanish': 'es-PA',
    'Paraguay - Spanish': 'es-PY',
    'People\'s Republic of China - Chinese (Simplified) Legacy': 'zh-CN',
    'People\'s Republic of China - Mongolian (Traditional Mongolian)': 'mn-CN',
    'People\'s Republic of China - Tibetan': 'bo-CN',
    'People\'s Republic of China - Uyghur': 'ug-CN',
    'People\'s Republic of China - Yi': 'ii-CN',
    'Peru - Quechua': 'quz-PE',
    'Peru - Spanish': 'es-PE',
    'Philippines - Filipino': 'fil-PH',
    'Poland - Polish': 'pl-PL',
    'Portugal - Portuguese': 'pt-PT',
    'Principality of Monaco - French': 'fr-MC',
    'Puerto Rico - Spanish': 'es-PR',
    'Qatar - Arabic': 'ar-QA',
    'Republic of the Philippines - English': 'en-PH',
    'Romania - Romanian': 'ro-RO',
    'Russia - Bashkir': 'ba-RU',
    'Russia - Russian': 'ru-RU',
    'Russia - Tatar': 'tt-RU',
    'Russia - Yakut': 'sah-RU',
    'Rwanda - Kinyarwanda': 'rw-RW',
    'Saudi Arabia - Arabic': 'ar-SA',
    'Senegal - Wolof': 'wo-SN',
    'Serbia - Serbian (Cyrillic)': 'sr-RS',
    'Serbia - Serbian (Latin)': 'sr-RS',
    'Serbia and Montenegro (Former) - Serbian (Cyrillic)': 'sr-CS',
    'Serbia and Montenegro (Former) - Serbian (Latin)': 'sr-CS',
    'Singapore - Chinese (Simplified) Legacy': 'zh-SG',
    'Singapore - English': 'en-SG',
    'Slovakia - Slovak': 'sk-SK',
    'Slovenia - Slovenian': 'sl-SI',
    'South Africa - Afrikaans': 'af-ZA',
    'South Africa - English': 'en-ZA',
    'South Africa - isiXhosa': 'xh-ZA',
    'South Africa - isiZulu': 'zu-ZA',
    'South Africa - Sesotho sa Leboa': 'nso-ZA',
    'South Africa - Setswana': 'tn-ZA',
    'Spain - Basque': 'eu-ES',
    'Spain - Catalan': 'ca-ES',
    'Spain - Galician': 'gl-ES',
    'Spain - Spanish': 'es-ES',
    'Sri Lanka - Sinhala': 'si-LK',
    'Sweden - Sami (Lule)': 'smj-SE',
    'Sweden - Sami (Northern)': 'se-SE',
    'Sweden - Sami (Southern)': 'sma-SE',
    'Sweden - Swedish': 'sv-SE',
    'Switzerland - French': 'fr-CH',
    'Switzerland - German': 'de-CH',
    'Switzerland - Italian': 'it-CH',
    'Switzerland - Romansh': 'rm-CH',
    'Syria - Arabic': 'ar-SY',
    'Syria - Syriac': 'syr-SY',
    'Taiwan - Chinese (Traditional) Legacy': 'zh-TW',
    'Tajikistan - Tajik (Cyrillic)': 'tg-TJ',
    'Thailand - Thai': 'th-TH',
    'Trinidad and Tobago - English': 'en-TT',
    'Tunisia - Arabic': 'ar-TN',
    'Turkey - Turkish': 'tr-TR',
    'Turkmenistan - Turkmen': 'tk-TM',
    'U.A.E. - Arabic': 'ar-AE',
    'Ukraine - Ukrainian': 'uk-UA',
    'United Kingdom - English': 'en-GB',
    'United Kingdom - Scottish Gaelic': 'gd-GB',
    'United Kingdom - Welsh': 'cy-GB',
    'United States - English': 'en-US',
    'United States - Spanish': 'es-US',
    'Uruguay - Spanish': 'es-UY',
    'Uzbekistan - Uzbek (Cyrillic)': 'uz-UZ',
    'Uzbekistan - Uzbek (Latin)': 'uz-UZ',
    'Vietnam - Vietnamese': 'vi-VN',
    'Yemen - Arabic': 'ar-YE',
    'Zimbabwe - English': 'en-ZW'
  };

  static Map<String, String> localeCountry = {
    'prs': 'AF',
    'ps': 'AF',
    'sq': 'AL',
    'ar': 'DZ',
    'tzm': 'DZ',
    'es': 'AR',
    'hy': 'AM',
    'en': 'AU',
    'de': 'AT',
    'az': 'AZ',
    'bn': 'BD',
    'be': 'BY',
    'nl': 'BE',
    'fr': 'BE',
    'quz': 'BO',
    'bs': 'BA',
    'hr': 'BA',
    'sr': 'BA',
    'pt': 'BR',
    'ms': 'BN',
    'bg': 'BG',
    'km': 'KH',
    'iu': 'CA',
    'moh': 'CA',
    'arn': 'CL',
    'cs': 'CZ',
    'da': 'DK',
    'et': 'EE',
    'am': 'ET',
    'fo': 'FO',
    'fi': 'FI',
    'smn': 'FI',
    'se': 'FI',
    'sms': 'FI',
    'sv': 'FI',
    'gsw': 'FR',
    'br': 'FR',
    'co': 'FR',
    'oc': 'FR',
    'ka': 'GE',
    'dsb': 'DE',
    'hsb': 'DE',
    'el': 'GR',
    'kl': 'GL',
    'qut': 'GT',
    'zh': 'HK',
    'hu': 'HU',
    'is': 'IS',
    'as': 'IN',
    'gu': 'IN',
    'hi': 'IN',
    'kn': 'IN',
    'kok': 'IN',
    'ml': 'IN',
    'mr': 'IN',
    'or': 'IN',
    'pa': 'IN',
    'sa': 'IN',
    'ta': 'IN',
    'te': 'IN',
    'id': 'ID',
    'fa': 'IR',
    'ga': 'IE',
    'ur': 'PK',
    'he': 'IL',
    'it': 'IT',
    'ja': 'JP',
    'kk': 'KZ',
    'sw': 'KE',
    'ko': 'KR',
    'ky': 'KG',
    'lo': 'LA',
    'lv': 'LV',
    'lt': 'LT',
    'lb': 'LU',
    'mk': 'MK',
    'dv': 'MV',
    'mt': 'MT',
    'mn': 'MN',
    'ne': 'NP',
    'fy': 'NL',
    'mi': 'NZ',
    'ha': 'NG',
    'ig': 'NG',
    'yo': 'NG',
    'nb': 'NO',
    'nn': 'NO',
    'smj': 'NO',
    'sma': 'NO',
    'bo': 'CN',
    'ug': 'CN',
    'ii': 'CN',
    'fil': 'PH',
    'pl': 'PL',
    'ro': 'RO',
    'ba': 'RU',
    'ru': 'RU',
    'tt': 'RU',
    'sah': 'RU',
    'rw': 'RW',
    'wo': 'SN',
    'sk': 'SK',
    'sl': 'SI',
    'af': 'ZA',
    'xh': 'ZA',
    'zu': 'ZA',
    'nso': 'ZA',
    'tn': 'ZA',
    'eu': 'ES',
    'ca': 'ES',
    'gl': 'ES',
    'si': 'LK',
    'rm': 'CH',
    'syr': 'SY',
    'tg': 'TJ',
    'th': 'TH',
    'tr': 'TR',
    'tk': 'TM',
    'uk': 'UA',
    'gd': 'GB',
    'cy': 'GB',
    'uz': 'UZ',
    'vi': 'VN',
  };

  Future<Map<String, Map<String, String>>> importFiles() async {
    final newFiles = (await file_access.openFiles(acceptedTypeGroups: [
      XTypeGroup(extensions: ['json', 'arb'])
    ]));
    final filesData = <String, Map<String, String>>{};
    if (newFiles == null || newFiles.isEmpty) {
      return null;
    }
    for (var item in newFiles) {
      var name = path.basenameWithoutExtension(item.path);
      var splits = name.replaceAll('intl_', '').replaceAll('_', '-').replaceAll('.', '-').split('-');
      if (splits.length < 2) {
        final country = TranslateService.localeCountry[splits[0]];
        splits.add(country);
      }
      var locale = '${splits[0]}-${splits[1]}';
      var text = await item.readAsString();
      var json = Map<String, String>.from(jsonDecode(text) as Map<dynamic, dynamic>);
      if (filesData.containsKey(locale)) {
        throw Exception(TranslateService().locale.error_locale_dublicate);
      }
      if (TranslateService.countryName2Code.values.firstWhere((c) => c == locale, orElse: () => null) == null) {
        throw Exception(TranslateService().locale.error_locale_notsupport(locale, item.path));
      }
      filesData[locale] = json;
    }
    return filesData;
  }

  /// {@endtemplate}
}
